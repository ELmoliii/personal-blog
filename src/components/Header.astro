---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import Son from "./icons/Son.astro";
import Moon from "./icons/Moon.astro";
import Logo from "./icons/Logo.astro";
---

<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{SITE_TITLE}</title>


  <!-- Script para aplicar el tema antes de que se renderice la página -->
  <script is:inline>
    (function() {
      const savedTheme = localStorage.getItem('theme');
      const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      const theme = savedTheme || (systemPrefersDark ? 'dark' : 'light');

      if (theme === 'dark') {
        document.documentElement.classList.add('dark-mode');
      } else {
        document.documentElement.classList.remove('dark-mode');
      }
    })();
  </script>

  <style>
    /* Definir variables de color */
    :root {
      --background-color: white;
      --text-color: black;
      --menu-bg: white;
    }

    body {
      background-color: var(--background-color);
      color: var(--text-color);
      margin: 0;
      padding: 0;
    }

    .dark-mode {
      --background-color: black;
      --text-color: white;
      --menu-bg: black;
    }

header {
  margin: 0;
  padding: 0 1em;
  background: linear-gradient(var(--gray-gradient)) no-repeat;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  position: relative; /* Necesario para posicionar el menú desplegable */
}

h2 {
  margin: 0;
  font-size: 1.5em;
}

h2 a,
h2 a.active {
  text-decoration: none;
  color: var(--text-color);

}

nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative; /* Para que el menú hamburguesa y el menú desplegable estén en el mismo contenedor */
}

nav a {
  padding: 1em 0.5em;
  color: var(--text-color);
  border-bottom: 4px solid transparent;
  text-decoration: none;
}

nav a.active {
  text-decoration: none;
  border-bottom-color: var(--text-color);
}

#theme-toggle {
  background: none;
  border: none;
  cursor: pointer;
  color: var(--text-color);
  padding: 0.5em; /* Añade padding para hacerlo más fácil de clicar */
}

/* Estilo del menú hamburguesa */
#menu-toggle {
  display: none; /* Ocultamos el botón de menú hamburguesa por defecto */
  flex-direction: column;
  cursor: pointer;
  border: none;
  background: none;
}

#menu-toggle div {
  width: 30px;
  height: 3px;
  background-color: var(--text-color);
  margin: 5px 0;
}

/* Estilo del menú desplegable */
.menu {
  display: none; /* Ocultamos el menú desplegable por defecto */
  flex-direction: column;
  position: absolute;
  top: 60px; /* Ajusta esto según el tamaño de tu encabezado */
  left: 0;
  width: 100%;
  background-color: var(--menu-bg);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.menu.open {
  display: flex;
}

.menu a {
  padding: 1em;
  text-align: center;
}

/* Ajusta el diseño de los enlaces en modo responsive */
@media (max-width: 720px) {
  nav {
    align-items: flex-start;
  }

  .internal-links {
    display: none; /* Ocultamos los enlaces en vista de escritorio para mostrar el menú hamburguesa */
  }

  #menu-toggle {
    display: flex; /* Mostramos el botón de menú hamburguesa en dispositivos móviles */
  }
  h2{
	display: none;
  }
}

  </style>
</head>

<body>
  <header>
    <nav>
      <h2><a href="/">{SITE_TITLE}</a>
      
      </h2>
      <button id="menu-toggle" aria-label="Abrir menú">
        <div></div>
        <div></div>
        <div></div>
      </button>
      <div class="internal-links">
        <HeaderLink href="/">Home</HeaderLink>
        <HeaderLink href="/blog">Blog</HeaderLink>
        <HeaderLink href="/about">Sobre Mi</HeaderLink>
      </div>
      <div id="theme-toggle" aria-label="Cambiar Modo">
        <Son id="sun-icon" />
        <Moon id="moon-icon" style="display:none;" />
      </div>
    </nav>
    <div class="menu">
      
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/blog">Blog</HeaderLink>
      <HeaderLink href="/about">Sobre Mi</HeaderLink>
    </div>
  </header>

  <script>
  document.addEventListener('DOMContentLoaded', () => {
  const themeToggleButton = document.getElementById('theme-toggle');
  const rootElement = document.documentElement; // Cambiado de body a documentElement
  const sunIcon = document.getElementById('sun-icon');
  const moonIcon = document.getElementById('moon-icon');
  const menuToggleButton = document.getElementById('menu-toggle');
  const menuElement = document.querySelector('.menu');

  if (!themeToggleButton || !sunIcon || !moonIcon || !menuToggleButton || !menuElement) return;

  const applyTheme = (theme: string) => {
    if (theme === 'dark') {
      rootElement.classList.add('dark-mode');
      sunIcon.style.display = 'none';
      moonIcon.style.display = 'block';
    } else {
      rootElement.classList.remove('dark-mode');
      sunIcon.style.display = 'block';
      moonIcon.style.display = 'none';
    }
  };

  const systemPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
  const savedTheme = localStorage.getItem('theme');
  const initialTheme = savedTheme || (systemPrefersDark ? 'dark' : 'light');
  applyTheme(initialTheme);

  themeToggleButton.addEventListener('click', () => {
    const currentTheme = rootElement.classList.contains('dark-mode') ? 'dark' : 'light';
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    applyTheme(newTheme);
    localStorage.setItem('theme', newTheme);
  });

  menuToggleButton.addEventListener('click', () => {
    menuElement.classList.toggle('open');
  });
});

  </script>
</body>

</html>
